{"version":3,"file":"TestCube.CUNvb14e.mjs","sources":["../../node_modules/lucide-react/dist/esm/icons/camera.mjs","../../node_modules/lucide-react/dist/esm/icons/settings.mjs","../../src/components/TestCube.tsx"],"sourcesContent":["/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Camera = createLucideIcon(\"Camera\", [\n  [\n    \"path\",\n    {\n      d: \"M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z\",\n      key: \"1tc9qg\"\n    }\n  ],\n  [\"circle\", { cx: \"12\", cy: \"13\", r: \"3\", key: \"1vg3eu\" }]\n]);\n\nexport { Camera as default };\n//# sourceMappingURL=camera.mjs.map\n","/**\n * lucide-react v0.0.1 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.mjs';\n\nconst Settings = createLucideIcon(\"Settings\", [\n  [\n    \"path\",\n    {\n      d: \"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\",\n      key: \"1qme2f\"\n    }\n  ],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"3\", key: \"1v7zrd\" }]\n]);\n\nexport { Settings as default };\n//# sourceMappingURL=settings.mjs.map\n","import React, { Suspense, useMemo, useState, useRef, useEffect } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls, } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { Settings, Camera } from 'lucide-react';\nimport { useNavigation } from '../contexts/NavigationContext';\n\ninterface ShapeProps {\n    color: string;\n    wireframe: boolean;\n    autoRotate: boolean;\n    hoverTime: number;\n    scale?: number;\n    initialRotation?: [number, number, number]; // [x, y, z] in radians\n  }\n\nconst Shape = ({ color, wireframe, autoRotate, hoverTime, scale, initialRotation=[0, 0, 0] }: ShapeProps) => {\n  const geometry = useMemo(() => {\n    const phi = (1 + Math.sqrt(5)) / 2;\n    const baseScale = scale || 0.5;\n    \n    const vertices = [\n        baseScale * phi, baseScale * phi, baseScale * phi,\n        -baseScale * phi, -baseScale * phi, baseScale * phi,\n        -baseScale * phi, baseScale * phi, -baseScale * phi,\n        baseScale * phi, -baseScale * phi, -baseScale * phi,\n        -baseScale * phi, baseScale * phi, baseScale * phi,\n        baseScale * phi, -baseScale * phi, baseScale * phi,\n        baseScale * phi, baseScale * phi, -baseScale * phi,\n        -baseScale * phi, -baseScale * phi, -baseScale * phi,\n      ];\n\n    const indices = [\n      0, 1, 2, 0, 2, 3, 0, 3, 1, 1, 3, 2,\n      4, 5, 6, 4, 6, 7, 4, 7, 5, 5, 7, 6\n    ];\n\n    const geometry = new THREE.BufferGeometry();\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n    geometry.setIndex(indices);\n    geometry.computeVertexNormals();\n    \n    return geometry;\n  }, [scale]);\n\n  const meshRef = useRef<THREE.Mesh>(null);\n  const rotationSpeedRef = useRef(0.5);\n  const glowIntensityRef = useRef(0);\n\n  // Set initial rotation when the component mounts\n  useEffect(() => {\n    if (meshRef.current) {\n      meshRef.current.rotation.x = initialRotation[0];\n      meshRef.current.rotation.y = initialRotation[1];\n      meshRef.current.rotation.z = initialRotation[2];\n    }\n  }, []);\n\n  useFrame((_, delta) => {\n    if (autoRotate && meshRef.current) {\n      // Smoothly adjust rotation speed\n      const targetSpeed = 0.5 + hoverTime * 2;\n      rotationSpeedRef.current += (targetSpeed - rotationSpeedRef.current) * 0.1;\n      meshRef.current.rotation.y += delta * rotationSpeedRef.current;\n\n      // Smoothly adjust glow intensity\n      const targetGlow = hoverTime * 2;\n      glowIntensityRef.current += (targetGlow - glowIntensityRef.current) * 0.1;\n    }\n  });\n\n  return (\n    <mesh \n      ref={meshRef} \n      geometry={geometry}\n    >\n      <meshStandardMaterial \n        color={color}\n        wireframe={wireframe}\n        side={THREE.DoubleSide}\n        metalness={0.5}\n        roughness={0.5}\n        emissive={color}\n        emissiveIntensity={glowIntensityRef.current}\n      />\n    </mesh>\n  );\n};\nconst StellaOctangula: React.FC = () => {\n    const { navItems, hoveredPath } = useNavigation();\n    const [wireframe, setWireframe] = useState(true);\n    const [autoRotate, setAutoRotate] = useState(true);\n    \n    // Keep track of hover times for each path\n    const [hoverTimes, setHoverTimes] = useState<Record<string, number>>(\n      Object.fromEntries(navItems.map(item => [item.path, 0]))\n    );\n    const hoverStatesRef = useRef<Record<string, number>>(\n        Object.fromEntries(navItems.map(item => [item.path, 0]))\n    )\n    const animationFrameRef = useRef<number>();\n  \n    // Update hover states when path changes\n    useEffect(() => {\n        navItems.forEach(item => {\n            hoverStatesRef.current[item.path] = hoveredPath === item.path ? 1 : 0;\n        });\n    }, [hoveredPath, navItems]);\n\n    useEffect(() => {\n      const updateHoverTimes = () => {\n        setHoverTimes(prevTimes => {\n          const newTimes = { ...prevTimes };\n          \n          navItems.forEach(item => {\n            if (hoverStatesRef.current[item.path] > 0) {\n              // Path is being hovered - increase time\n              newTimes[item.path] = (prevTimes[item.path] || 0) + 0.032;\n            } else {\n              // Path is not being hovered - decrease time\n              newTimes[item.path] = Math.max(0, (prevTimes[item.path] || 0) - 0.128);\n            }\n          });\n          \n          return newTimes;\n        });\n  \n        animationFrameRef.current = requestAnimationFrame(updateHoverTimes);\n      };\n  \n      animationFrameRef.current = requestAnimationFrame(updateHoverTimes);\n      \n      return () => {\n        if (animationFrameRef.current) {\n          cancelAnimationFrame(animationFrameRef.current);\n        }\n      };\n    }, [hoveredPath, navItems]);\n  \n    return (\n      <div className=\"w-full h-96 bg-gray-900 rounded-lg relative\">\n        <div className=\"absolute top-4 right-4 z-10 flex gap-2\">\n          <button\n            onClick={() => setWireframe(!wireframe)}\n            className=\"p-2 bg-white/10 rounded-full hover:bg-white/20\"\n            title=\"Toggle Wireframe\"\n          >\n            <Settings className=\"w-5 h-5 text-white\" />\n          </button>\n          <button\n            onClick={() => setAutoRotate(!autoRotate)}\n            className=\"p-2 bg-white/10 rounded-full hover:bg-white/20\"\n            title=\"Toggle Auto-rotation\"\n          >\n            <Camera className=\"w-5 h-5 text-white\" />\n          </button>\n        </div>\n        \n        <Canvas camera={{ position: [3, 2, 3] }}>\n          <Suspense fallback={null}>\n            <ambientLight intensity={0.5} />\n            <pointLight position={[10, 10, 10]} />\n            {navItems.map((item, index) => {\n                // Create unique initial rotations based on index\n                const initialRotation: [number, number, number] = [\n                    (Math.PI / 4) * index,           // X rotation\n                    (Math.PI / 3) * (index + 1),     // Y rotation\n                    (Math.PI / 6) * (index * 2),     // Z rotation\n                ];\n                \n                return (\n                    <Shape\n                    key={item.path}\n                    color={item.color}\n                    wireframe={wireframe}\n                    autoRotate={autoRotate}\n                    hoverTime={hoverTimes[item.path]}\n                    scale={0.5 + (index * 0.2)}\n                    initialRotation={initialRotation}\n                    />\n                );\n            })}\n            <OrbitControls \n              autoRotate={autoRotate} \n              autoRotateSpeed={2}\n            />\n          </Suspense>\n        </Canvas>\n      </div>\n    );\n  };\n\n\nexport default StellaOctangula;"],"names":["Camera","createLucideIcon","Settings","Shape","color","wireframe","autoRotate","hoverTime","scale","initialRotation","geometry","useMemo","phi","baseScale","vertices","indices","THREE.BufferGeometry","THREE.Float32BufferAttribute","meshRef","useRef","rotationSpeedRef","glowIntensityRef","useEffect","useFrame","_","delta","targetSpeed","targetGlow","jsx","THREE.DoubleSide","StellaOctangula","navItems","hoveredPath","useNavigation","setWireframe","useState","setAutoRotate","hoverTimes","setHoverTimes","item","hoverStatesRef","animationFrameRef","updateHoverTimes","prevTimes","newTimes","jsxs","Canvas","Suspense","index","OrbitControls"],"mappings":"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","x_google_ignoreList":[0,1]}